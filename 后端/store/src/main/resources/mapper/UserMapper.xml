<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<!-- namespace属性：用于指定当前的映射文件和哪个接口进行映射，需要指定文件接口的路径标注包的完整路径结构-->
<mapper namespace="com.cy.store.mapper.UserMapper">

   <!--  自定义映射规则：resultMap标签来完成映射规则的定义  -->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
        <id column="uid" property="uid"></id>
       <!--将表的字段和类的属性不一致的字段进行匹配指定，名称一致的字段可以省略       -->
        <result column="is_delete" property="isDelete"></result>
        <result column="create_user" property="createdUser"></result>
        <result column="create_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

    <!--  id属性：表示映射的接口中方法的名称 ,直接在标签的内容来编写SQL -->
    <!--
      useGeneratedKeys属性：表示开启某个字段的值递增（主键设置为递增）
      keyProperty:标签将表中的哪个字段作为主键进行递增
        -->
<insert id="insert" useGeneratedKeys="true" keyProperty="uid">
    INSERT INTO t_user (username, password, salt, phone, email, gender, avatar, is_delete, created_user, created_time,
                        modified_user, modified_time)
    values (#{username}, #{password}, #{salt},
            #{phone},
            #{email},
            #{gender},
            #{avatar},
            #{isDelete},
            #{createdUser},
            #{createdTime},
            #{modifiedUser},
            #{modifiedTime})

</insert>
    <!--select语句在执行的时候，查询的结果是一个对象，多个对象     -->
    <!--
        ResultType:表示查询的结果集类型，只需要指定对应映射类的类型，并且包含完整包结构
        resultMap:标签当表的字段和类的对象属性的字段名称不一致时，来自定义查询结果集的映射规则
        -->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username=#{username}
    </select>


    <update id="updatePasswordByUid" >
        update  t_user set
            password=#{password},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where uid=${uid}
    </update>

    <select id="findByUid" resultMap="UserEntityMap">
        select * from t_user where uid=#{uid}
    </select>


<!--    if表示条件判断标签，test接收的是一个返回值为boolean类型的条件
        如果test条件的结果为true则执行if标签内部的语句
-->
    <update id="updateInfoByUid">
        update t_user
        set
         <if test="phone!=null"> phone=#{phone},</if>
         <if test="email">       email=#{email},</if>
         <if test="gender">      gender=#{gender},</if>
           modified_user=#{modifiedUser},
           modified_time=#{modifiedTime}
        where uid=${uid}
    </update>

    <update id="updateAvatarByUid">
       update t_user set
           avatar=#{avatar},
           modified_user=#{modifiedUser},
           modified_time=#{modifiedTime}
       where
          uid=#{uid}
    </update>
</mapper>